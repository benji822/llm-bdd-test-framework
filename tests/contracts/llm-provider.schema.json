{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://cazino-frontend.com/schemas/llm-provider.schema.json",
  "title": "LLM Provider Interface",
  "description": "Abstraction layer for local LLM SDK providers (TypeScript Codex SDK, Claude SDK) - no API-based providers",
  "type": "object",
  "required": ["name", "generateCompletion"],
  "properties": {
    "name": {
      "type": "string",
      "enum": ["codex", "claude"],
      "description": "Provider identifier: 'codex' (TypeScript Codex SDK - default) or 'claude' (Claude SDK - fallback)"
    },
    "generateCompletion": {
      "type": "object",
      "description": "Method to generate LLM completion using local SDK",
      "properties": {
        "input": {
          "type": "object",
          "required": ["prompt", "options"],
          "properties": {
            "prompt": {
              "type": "string",
              "minLength": 1,
              "description": "The prompt text sent to LLM"
            },
            "options": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "Model identifier (e.g., codex-typescript, claude-3-opus)"
                },
                "temperature": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 2,
                  "default": 0.3,
                  "description": "Sampling temperature for randomness (lower for code generation)"
                },
                "maxTokens": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100000,
                  "description": "Maximum tokens in response"
                },
                "timeout": {
                  "type": "integer",
                  "minimum": 1000,
                  "maximum": 180000,
                  "default": 180000,
                  "description": "Request timeout in milliseconds (max 3 minutes, local SDKs typically <30s)"
                }
              }
            }
          }
        },
        "output": {
          "type": "object",
          "required": ["completion", "metadata"],
          "properties": {
            "completion": {
              "type": "string",
              "description": "Generated text completion"
            },
            "metadata": {
              "type": "object",
              "required": ["provider", "model", "tokensUsed", "responseTime"],
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": ["codex", "claude"],
                  "description": "Provider name"
                },
                "model": {
                  "type": "string",
                  "description": "Model used"
                },
                "tokensUsed": {
                  "type": "integer",
                  "description": "Total tokens consumed"
                },
                "responseTime": {
                  "type": "integer",
                  "description": "Response time in milliseconds (local SDKs typically <30000ms)"
                }
              }
            }
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "PROVIDER_ERROR",
                  "SDK_TIMEOUT",
                  "INVALID_RESPONSE",
                  "SDK_INITIALIZATION_FAILED",
                  "MODEL_NOT_AVAILABLE"
                ],
                "description": "Error code (no RATE_LIMIT or AUTH_FAILURE for local SDKs)"
              },
              "message": {
                "type": "string",
                "description": "Human-readable error description"
              },
              "details": {
                "type": "object",
                "description": "Additional error context"
              }
            }
          }
        }
      }
    }
  },
  "examples": [
    {
      "name": "codex",
      "generateCompletion": {
        "input": {
          "prompt": "Convert this spec to YAML: ...",
          "options": {
            "model": "gpt-5-codex",
            "temperature": 0.3,
            "maxTokens": 4000,
            "timeout": 180000
          }
        },
        "output": {
          "completion": "feature: User Login...",
          "metadata": {
            "provider": "codex",
            "model": "gpt-5-codex",
            "tokensUsed": 1250,
            "responseTime": 850
          }
        }
      }
    },
    {
      "name": "claude",
      "generateCompletion": {
        "input": {
          "prompt": "Generate Gherkin from YAML: ...",
          "options": {
            "model": "claude-sonnet-4.5",
            "temperature": 0.3,
            "maxTokens": 4000,
            "timeout": 180000
          }
        },
        "output": {
          "completion": "Feature: User Login\n  Scenario: ...",
          "metadata": {
            "provider": "claude",
            "model": "claude-sonnet-4.5",
            "tokensUsed": 980,
            "responseTime": 1200
          }
        }
      }
    }
  ]
}
